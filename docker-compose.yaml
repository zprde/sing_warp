services:
  clear-config:
    image: alpine:3.18.3
    volumes:
      - warp_data:/data
    command:
      - rm
      - /data/wgcf-account.toml
  register-warp:
    image: sing_warp
    build:
      context: .
    volumes:
      - warp_data:/data
    command:
      - wgcf
      - register
      - --config
      - /data/wgcf-account.toml
      - --accept-tos
    depends_on:
      - clear-config
  warp-ip:
    image: warp-ip
    build:
      context: wireguard/
    depends_on:
      register-warp:
        condition: service_completed_successfully
    volumes:
      - warp_data:/wireguard
      - ${PWD}/wireguard/config/endip.sh:/wireguard/endip.sh
    working_dir: /wireguard
    entrypoint: "bash endip.sh "
  expose-best:
    image: warp-ip
    volumes:
      - warp_data:/wireguard
      - ${PWD}/wireguard/config/best.sh:/wireguard/best.sh
      - ${PWD}/wireguard/config/config.tmp.json:/wireguard/config.tmp.json
    working_dir: /wireguard
    entrypoint: "bash best.sh"
    depends_on:
      warp-ip:
        condition: service_completed_successfully
  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  sing-warp:
    image: sing_warp
    restart: always
    volumes:
      - warp_data:/data
      - ${PWD}/health_check.sh:/health_check.sh
    command:
      - sing-box
      - run
      - -c
      - /data/config.json
    ports:
      - 2080:1080
    healthcheck:
      test: "sh /health_check.sh"
      start_period: 10s
      retries: 5
      interval: 5s
      timeout: 10s
    depends_on:
      expose-best:
        condition: service_completed_successfully
      autoheal:
        condition: service_started
volumes:
  warp_data: { }